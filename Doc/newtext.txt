
void AMyPawn::MoveRight(float Val)
{

	if (Val != 0.f)
	{
		if (Controller)
		{

			if (Val > 0.f)
			{

				FVector ForVec = GetActorForwardVector();
				TestVec1 = GetActorForwardVector();

				FQuat AddQuat = FQuat(ForVec, 0.01);
				MyCurQuat = GetActorQuat();
				MyCurQuat = MyCurQuat * AddQuat;

				SetActorRotation(MyCurQuat);
			}
			if (Val < 0.f)
			{

				FVector ForVec = GetActorForwardVector();
				TestVec1 = GetActorForwardVector();

				FQuat AddQuat = FQuat(ForVec, -0.01);
				MyCurQuat = GetActorQuat();
				MyCurQuat = MyCurQuat * AddQuat;

				SetActorRotation(MyCurQuat);

			}

			return;


		}
	}



}

void AMyPawn::MoveForward(float Val)
{

	if (Val != 0.f)
	{
		if (Controller)
		{

			if (Val > 0.f)
			{
				FVector ForVec = GetActorRightVector();
				ForVec.Normalize();
				TestVec1 = GetActorForwardVector();

				FQuat AddQuat = FQuat(ForVec, 0.01);
				MyCurQuat = GetActorQuat();
				MyCurQuat = MyCurQuat * AddQuat;

				SetActorRotation(MyCurQuat);
			}
			if (Val < 0.f)
			{
				FVector ForVec = GetActorRightVector();
				ForVec.Normalize();
				TestVec1 = GetActorForwardVector();

				FQuat AddQuat = FQuat(ForVec, 0.01);
				MyCurQuat = GetActorQuat();
				MyCurQuat = MyCurQuat * AddQuat;

				SetActorRotation(MyCurQuat);
			}
			return;

		}
	}



}